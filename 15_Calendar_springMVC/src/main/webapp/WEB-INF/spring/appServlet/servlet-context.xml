<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- Spring MVC @Controller같은 어노테이션 방식으로 운영을 하자~ -->
	<mvc:annotation-driven/>

	<!-- 정적파일 경로(js, css, img)를 설정 -->
	<mvc:resources location="/resources/" mapping="/**"></mvc:resources>
    <mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
    
	<!-- JSP 셋팅 :   prefix/페이지이름suffix 경로를 만들어서 찾아줌 -->
	<!-- DispatcherServlet이 실행되어야 ViewResolver가 실행된다. -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 객체를 xml에 등록하지 않아도 생성해서 사용할 수 있게 한다. -->
	<!-- base-package는 기본적으로 3뎁스로 구성한다. -->
	<!-- com.hk.calboard 포함한 패키지 하위 클래스들을 bean으로 등록시킨다. -->
	<!-- 하위 클래스들중에 @controller, @service, @repository, @component -->
	<context:component-scan base-package="com.hk.calboard" />
	
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" -->
<!-- 	    proxy-target-class="true" /> -->
	
	<!-- 인터셉터 설정하기 -->
<!-- 	<mvc:interceptors> -->
<!-- 		<mvc:interceptor> -->
<!-- 			<mvc:mapping path="/*.do"/> -->
<!-- 			<bean class="com.hk.ansboard.interceptor.TestInterceptor" /> -->
<!-- 		</mvc:interceptor> -->
<!-- 	</mvc:interceptors> -->
</beans>